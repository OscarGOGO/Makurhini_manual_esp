[{"path":"index.html","id":"makurhini","chapter":"Makurhini","heading":"Makurhini","text":"En este manual se documenta parte de las funciones del paquete Makurhini","code":""},{"path":"instalación-del-paquete-makurhini.html","id":"instalación-del-paquete-makurhini","chapter":"1 Instalación del paquete Makurhini","heading":"1 Instalación del paquete Makurhini","text":"","code":""},{"path":"instalación-del-paquete-makurhini.html","id":"instalación-estandar","chapter":"1 Instalación del paquete Makurhini","heading":"1.1 Instalación estandar","text":"Depende de R (> 4.0.0), igraph (>= 1.2.6)Se recomienda pre-instalar Rtools:\nhttps://cran.r-project.org/bin/windows/Rtools/Se recomienda pre-instalar Rtools:\nhttps://cran.r-project.org/bin/windows/Rtools/Se recomienda pre-instalar los paquetes devtools y remotesSe recomienda pre-instalar los paquetes devtools y remotesEn caso de que aparezca en la lista de paquetes, cierre la sesión de\nR y vuelva abrirla.Si se produce el siguiente error durante la instalación:Entonces intenta lo siguiente:","code":"\ninstall.packages(\"igraph\")\ninstall.packages(c(\"devtools\", \"remotes\"))\nlibrary(devtools) \nlibrary(remotes)\ninstall_github(\"connectscape/Makurhini\", dependencies = TRUE, upgrade = \"never\")Using github PAT\nfrom envvar GITHUB_PAT Error: Failed to install 'unknown package' from\nGitHub: HTTP error 401. Bad credentials\nSys.getenv(\"GITHUB_PAT\") \nSys.unsetenv(\"GITHUB_PAT\")"},{"path":"instalación-del-paquete-makurhini.html","id":"instalar-en-linux","chapter":"1 Instalación del paquete Makurhini","heading":"1.2 Instalar en Linux","text":"Makurhini en Linux Para instalar Makurhini en linux considere los\nsiguientes pasos:Utilice la línea de comandos de Linux para instalar el paquete de la\nunidad:Utilice la línea de comandos de Linux para instalar gdal:Utilice la línea de comandos de Linux para instalar libfontconfig y\nlibharfbuzz:Ahora puede instalar los paquetes devtools y remotes, y los paquetes\nterra, raster y sf directamente en su R o RStudio.Utiliza la línea de comandos de Linux para instalar igraph:Ahora puede instalar los paquetes gdistance, graph4lg y ggpubr\ndirectamente en su R o RStudio.Ahora puedes instalar Makurhini directamente en tu R o RStudio.Tenga en cuenta que la instalación de Makurhini en Linux depende de su\nversión del sistema operativo y de que consiga instalar los paquetes de\nlos que depende Makurhini.","code":"sudo apt-get install -y libudunits2-devsudo apt install libgdal-devsudo apt install libfontconfig1-dev\n\nsudo apt install libharfbuzz-dev libfribidi-dev\ninstall.packages(c('remotes', 'devtools', 'terra', 'raster', 'sf'))sudo apt-get install libnlopt-dev\n\nsudo apt-get install r-cran-igraph\ninstall.packages(c('gdistance', 'graph4lg', 'ggpubr'))\nlibrary(devtools) \nlibrary(remotes) \ninstall_github(\"connectscape/Makurhini\", dependencies = TRUE, upgrade = \"never\") "},{"path":"estadísticas-de-fragmentación-del-paisaje.html","id":"estadísticas-de-fragmentación-del-paisaje","chapter":"2 Estadísticas de fragmentación del paisaje","heading":"2 Estadísticas de fragmentación del paisaje","text":"Exploraremos la función MK_Fragmentation() para caracterizar la composición y la configuración espacial de los parches en nuestro paisaje.La función calcula ocho métricas nivel de nodo (como el área de nodo, el porcentaje de borde y la dimensión fractal) y 13 estadísticas de fragmentación nivel de paisaje (como el número de nodos, el tamaño medio, la densidad de borde y el tamaño efectivo de la malla).Las entradas incluyen un objeto vectorial que representa los nodos del paisaje y un parámetro que define la distancia o profundidad de la influencia del borde (es decir, la distancia al borde del nodo).Los resultados consisten en un archivo vectorial tipo poligonal que contiene métricas nivel de nodo y una tabla que detalla las métricas nivel de paisaje.","code":""},{"path":"estadísticas-de-fragmentación-del-paisaje.html","id":"inputs","chapter":"2 Estadísticas de fragmentación del paisaje","heading":"2.1 Inputs","text":"Usaremos la librerias sf, para trabajar con un shapefile que contiene 404 parches de vegetación con la menor alteración o signos de degradación en un estado de México llamado Michoacán. Tambien cargaremos el paisaje de estudio donde se encuentran los parches y que fue delimitado usando el limite politico del estado y la región fisiográfica denominada Eje Neovolcánico.El shapefile lo pueden encontrar en la siguiente carpeta del drive:https://drive.google.com/drive/folders/1yJcxk2JsEfVjqBx7QM6SV5sIbq7YD1iX?usp=sharingPara gráficarlo necesitamos ggplot2, favor de instalarlo si lo tiene entre sus paquetes.En caso de necesitar abrir otro vector (e.g., .shp, .gpkg) necesitan usar la fución read_sf() del paquete sf, la función shapefile() del paquete raster, o la funcion vect() del paquete terra.Para abrirlo solo necesitan colocar la dirección de su archivo, el nombre y la extensión, ejemplo:vegetation_patches <- sf::read_sf(\"D:/Datos/vegetation_patches.shp\")vegetation_patches <- sf::read_sf(\"D:/Datos/vegetation_patches.shp\")vegetation_patches <- raster::shapefile(\"D:/Datos/vegetation_patches.shp\")vegetation_patches <- raster::shapefile(\"D:/Datos/vegetation_patches.shp\")vegetation_patches <- terra::vect(\"D:/Datos/vegetation_patches.shp\")vegetation_patches <- terra::vect(\"D:/Datos/vegetation_patches.shp\")Para definir el borde usaremos una distancia de 500 m partir del límite de los parches (Haddad et al. 2015).","code":"#> Cargando paquete requerido: igraph\n#> \n#> Adjuntando el paquete: 'igraph'\n#> The following objects are masked from 'package:stats':\n#> \n#>     decompose, spectrum\n#> The following object is masked from 'package:base':\n#> \n#>     union\n#> Cargando paquete requerido: cppRouting\n#> Linking to GEOS 3.13.0, GDAL 3.10.1, PROJ 9.5.1;\n#> sf_use_s2() is TRUE\n#> [1] 404\nlibrary(Makurhini)\nlibrary(sf)\n\nhabitat_nodes <- read_sf(\"C:/Users/habitat_nodes.shp\")\nnrow(habitat_nodes)\npaisaje <- read_sf(\"C:/Users/paisaje.shp\")install.packages(\"ggplot2\"), dependencies = TRUE)\ninstall.packages(\"RColorBrewer\"), dependencies = TRUE)\nlibrary(ggplot2)\nlibrary(RColorBrewer)\nggplot() +  \n  geom_sf(data = paisaje, aes(color = \"Study area\"), fill = NA, color = \"black\") +\n  geom_sf(data = habitat_nodes, aes(color = \"Parches\"), fill = \"forestgreen\", linewidth = 0.5) +\n  scale_color_manual(name = \"\", values = \"black\")+\n  theme_minimal() +\n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_blank())"},{"path":"estadísticas-de-fragmentación-del-paisaje.html","id":"funcion","chapter":"2 Estadísticas de fragmentación del paisaje","heading":"2.2 Funcion","text":"Los argumento de la función que usaremos son:nodes = objeto con los parches,edge_distance = profundidad del efecto de borde.min_node_area = Área mínima del nodo utilizada para calcular el número de nodos con un área menor la proporcionada. Por defecto igual 100 km² (Haddad et al. 2015).landscape_area = Área total del paisaje de estudio (opcional). Si se deja como NULL, se utilizará el área total de los nodos. La unidad de área debe ser igual la seleccionada en el párametro area_unit.area_unit = Puedes establecer una unidad de área (por ejemplo, “km2”, “cm2”, “m2”, “ha”; ver unit_convert). Por defecto es kilómetros cuadrados “km2”.perimeter_unit = Puedes establecer una unidad de perímetro (por ejemplo, “km”, “cm”, “m”, “ha”; ver unit_convert). Por defecto es kilómetros “km”.plot = Genera histogramas básicos y un mapa de área núcleo - borde.write = Guarda la tabla (estadísticas del paisaje), el objeto sf (estadísticas de parches/nodos) y las gráficas. Es necesario especificar la ruta y el prefijo. Por ejemplo, para guardar en la ruta “C:/Folder” con el prefijo “Fragmentation”: “C:/Folder/Fragmentation”","code":"\nMK_Fragmentation(\n  nodes = NULL,\n  edge_distance = 500,\n  min_node_area = 100,\n  landscape_area = NULL,\n  area_unit = \"ha\",\n  perimeter_unit = \"km\",\n  plot = FALSE,\n  write = NULL\n)\nMK_Fragmentation()"},{"path":"estadísticas-de-fragmentación-del-paisaje.html","id":"ejercicio-1","chapter":"2 Estadísticas de fragmentación del paisaje","heading":"2.3 Ejercicio 1","text":"Estimamos el área del paisaje de estudio.Aplicamos la función.","code":"\narea_paisaje <- st_area(paisaje) \narea_paisaje <- unit_convert(area_paisaje, \"m2\", \"ha\") \nFragmentacion <- MK_Fragmentation(nodes = habitat_nodes, \n                                  edge_distance = 500,\n                                  min_node_area = 100,\n                                  landscape_area = area_paisaje,\n                                  area_unit = \"ha\",\n                                  perimeter_unit = \"km\",\n                                  plot = TRUE)"},{"path":"estadísticas-de-fragmentación-del-paisaje.html","id":"estadisticos-a-nivel-de-parche","chapter":"2 Estadísticas de fragmentación del paisaje","heading":"2.3.1 Estadisticos a nivel de parche","text":"El primer resultado “Patch statistics shapefile” es un shapefile con estadísticos de fragmentación nivel de parche.Son espacialmente explicitos y podemos visualizarlos con librerias como ggplot2% de área núcleo:% de bordePerimeterPerimeter-Area RatioShape IndexFractal Dimension Index","code":"\nFragmentacion$`Patch statistics shapefile`\n#> Simple feature collection with 404 features and 9 fields\n#> Geometry type: POLYGON\n#> Dimension:     XY\n#> Bounding box:  xmin: -108954 ymin: 2025032 xmax: 202330.2 ymax: 2198936\n#> Projected CRS: NAD_1927_Albers\n#> First 10 features:\n#>    Id       Area        CA CAPercent Perimeter EdgePercent\n#> 1   1    85.8368     0.000    0.0000     5.989    100.0000\n#> 2   2   220.2168     0.000    0.0000    11.346    100.0000\n#> 3   3 11019.9668  5337.795   48.4375   184.969     51.5625\n#> 4   4   121.0018     0.000    0.0000     6.974    100.0000\n#> 5   5   184.7226     0.000    0.0000    14.452    100.0000\n#> 6   6    26.3052     0.000    0.0000     4.685    100.0000\n#> 7   7    43.4931     0.000    0.0000     6.066    100.0000\n#> 8   8    57.5414     0.000    0.0000     8.119    100.0000\n#> 9   9   203.4670     0.000    0.0000    14.309    100.0000\n#> 10 10 29440.4346 12326.275   41.8685   444.203     58.1315\n#>       PARA ShapeIndex   FRAC                       geometry\n#> 1  14.3324     0.1824 0.8040 POLYGON ((54911.05 2035815,...\n#> 2  19.4092     0.2157 0.9005 POLYGON ((44591.28 2042209,...\n#> 3  59.5774     0.4971 1.1217 POLYGON ((46491.11 2042467,...\n#> 4  17.3504     0.1788 0.8100 POLYGON ((54944.49 2048163,...\n#> 5  12.7818     0.3000 1.0235 POLYGON ((80094.28 2064140,...\n#> 6   5.6148     0.2577 0.9446 POLYGON ((69205.24 2066394,...\n#> 7   7.1700     0.2595 0.9557 POLYGON ((68554.2 2066632, ...\n#> 8   7.0873     0.3019 1.0335 POLYGON ((69995.53 2066880,...\n#> 9  14.2195     0.2830 1.0012 POLYGON ((79368.68 2067324,...\n#> 10 66.2770     0.7303 1.1849 POLYGON ((23378.32 2067554,...\nggplot() +  \n  geom_sf(data = paisaje, aes(color = \"Study area\"), fill = NA, color = \"black\") +\n  geom_sf(data = Fragmentacion$`Patch statistics shapefile`, aes(fill = CAPercent), color = \"black\", size = 0.1) +\n  scale_fill_distiller(\n    palette = \"RdYlGn\",\n    direction = 1, \n    name = \"% Área Núcleo\"\n  ) +\n  theme_minimal() +\n  labs(\n    title = \"Fragmentación a nivel de parche\",\n    fill = \"% Área Núcleo\"\n  ) +\n  theme(\n    legend.position = \"right\",\n    plot.title = element_text(hjust = 0.5)\n  )\nggplot() +  \n  geom_sf(data = paisaje, aes(color = \"Study area\"), fill = NA, color = \"black\") +\n  geom_sf(data = Fragmentacion$`Patch statistics shapefile`, aes(fill = EdgePercent), color = \"black\", size = 0.1) +\n  scale_fill_distiller(\n    palette = \"RdYlGn\",\n    direction = -1, \n    name = \"% Borde\"\n  ) +\n  theme_minimal() +\n  labs(\n    title = \"Fragmentación a nivel de parche\",\n    fill = \"% Borde\"\n  ) +\n  theme(\n    legend.position = \"right\",\n    plot.title = element_text(hjust = 0.5)\n  )\nggplot() +  \n  geom_sf(data = paisaje, aes(color = \"Study area\"), fill = NA, color = \"black\") +\n  geom_sf(data = Fragmentacion$`Patch statistics shapefile`, aes(fill = Perimeter), color = \"black\", size = 0.1) +\n  scale_fill_distiller(\n    palette = \"RdYlGn\",\n    direction = -1, \n    name = \"Perímetro\"\n  ) +\n  theme_minimal() +\n  labs(\n    title = \"Fragmentación a nivel de parche\",\n    fill = \"Perímetro\"\n  ) +\n  theme(\n    legend.position = \"right\",\n    plot.title = element_text(hjust = 0.5)\n  )\nggplot() +  \n  geom_sf(data = paisaje, aes(color = \"Study area\"), fill = NA, color = \"black\") +\n  geom_sf(data = Fragmentacion$`Patch statistics shapefile`, aes(fill = PARA), color = \"black\", size = 0.1) +\n  scale_fill_distiller(\n    palette = \"RdYlGn\",\n    direction = -1, \n    name = \"PARA\"\n  ) +\n  theme_minimal() +\n  labs(\n    title = \"Fragmentación a nivel de parche\",\n    fill = \"PARA\"\n  ) +\n  theme(\n    legend.position = \"right\",\n    plot.title = element_text(hjust = 0.5)\n  )\nggplot() +  \n  geom_sf(data = paisaje, aes(color = \"Study area\"), fill = NA, color = \"black\") +\n  geom_sf(data = Fragmentacion$`Patch statistics shapefile`, aes(fill = ShapeIndex), color = \"black\", size = 0.1) +\n  scale_fill_distiller(\n    palette = \"PiYG\",\n    direction = -1, \n    name = \"Shape Index\"\n  ) +\n  theme_minimal() +\n  labs(\n    title = \"Fragmentación a nivel de parche\",\n    fill = \"Shape Index\"\n  ) +\n  theme(\n    legend.position = \"right\",\n    plot.title = element_text(hjust = 0.5)\n  )\nggplot() +  \n  geom_sf(data = paisaje, aes(color = \"Study area\"), fill = NA, color = \"black\") +\n  geom_sf(data = Fragmentacion$`Patch statistics shapefile`, aes(fill = FRAC), color = \"black\", size = 0.1) +\n  scale_fill_distiller(\n    palette = \"PiYG\",\n    direction = -1, \n    name = \"FRAC\"\n  ) +\n  theme_minimal() +\n  labs(\n    title = \"Fragmentación a nivel de parche\",\n    fill = \"FRAC\"\n  ) +\n  theme(\n    legend.position = \"right\",\n    plot.title = element_text(hjust = 0.5)\n  )"},{"path":"estadísticas-de-fragmentación-del-paisaje.html","id":"estadísticos-a-nivel-de-paisaje","chapter":"2 Estadísticas de fragmentación del paisaje","heading":"2.3.2 Estadísticos a nivel de paisaje","text":"Los resultados se presentan manera de una lista, el primer resultado se llama “Summary landscape metrics (Viewer Panel)” y tiene estadisticos de fragmentación nivel de paisaje.La densidad de malla efectiva (MESH) es una medida del grado en que el movimiento entre diferentes partes del paisaje se ve interrumpido por una Fragmentación. El índice MESH se ha popularizado debido su facilidad de interpretación. Si conocemos el área de nuestro paisaje, entonces podemos estimar el porcentage de fragmentación:","code":"\nclass(Fragmentacion)\n#> [1] \"list\"\nFragmentacion$`Summary landscape metrics (Viewer Panel)`\nmesh <- as.data.frame(Fragmentacion[[1]])\nmesh <- mesh[13,2]\nmesh_porcentage <-  (area_paisaje - mesh) * 100 / area_paisaje \nmesh_porcentage\n#> [1] 97.58915"},{"path":"estadísticas-de-fragmentación-del-paisaje.html","id":"ejercicio-2","chapter":"2 Estadísticas de fragmentación del paisaje","heading":"2.4 Ejercicio 2","text":"Hagamos un loop en donde exploramos distintas distancias de profundidad del efecto borde.El porcentaje promedio de área núcleo (ausencia de efecto de borde) para todos los parches disminuye en más del 70% cuando se considera un efecto de borde con una penetración de 1 km.Podemos gráficar el promedio del porcentaje de área npucleo de los parches y el porcentaje del borde de los parches (%área núcleo + % de borde = 100%).","code":"\n#Loop edge distance\nlibrary(purrr)\nFragmentacion.2 <- map_dfr(seq(100, 1000, 100), function(x){\n  x.1 <- MK_Fragmentation(nodes = habitat_nodes, \n                          edge_distance = x, plot = FALSE)[[2]]\n  CA <- mean(x.1$CAPercent)\n  Edge <- mean(x.1$EdgePercent)\n  x.2 <- rbind(data.frame('Edge distance' = x, Type = \"Core Area\", Percentage = CA),\n                     data.frame('Edge distance' = x, Type = \"Edge\", Percentage = Edge))\n  return(x.2)\n}, .progress = TRUE)\n\n\nFragmentacion.2 #>    Edge.distance      Type Percentage\n#> 1            100 Core Area  65.761207\n#> 2            100      Edge  34.238793\n#> 3            200 Core Area  41.980654\n#> 4            200      Edge  58.019346\n#> 5            300 Core Area  26.853211\n#> 6            300      Edge  73.146789\n#> 7            400 Core Area  18.110913\n#> 8            400      Edge  81.889087\n#> 9            500 Core Area  12.863545\n#> 10           500      Edge  87.136455\n#> 11           600 Core Area   9.554117\n#> 12           600      Edge  90.445883\n#> 13           700 Core Area   7.347448\n#> 14           700      Edge  92.652552\n#> 15           800 Core Area   5.767296\n#> 16           800      Edge  94.232704\n#> 17           900 Core Area   4.564680\n#> 18           900      Edge  95.435320\n#> 19          1000 Core Area   3.633780\n#> 20          1000      Edge  96.366220\nlibrary(ggplot2)\nggplot(Fragmentacion.2, aes(x=Edge.distance, y=Percentage, group=Type)) +\n  geom_line(aes(color=Type))+\n  geom_point(aes(color=Type))+ ylim(0,100)+\n  scale_x_continuous(\"Distancia\", labels = as.character(Fragmentacion.2$Edge.distance), breaks = Fragmentacion.2$Edge.distance)+\n  scale_color_brewer(palette=\"Dark2\")+\n  theme_classic()"},{"path":"estadísticas-de-fragmentación-del-paisaje.html","id":"ejercicio-3","chapter":"2 Estadísticas de fragmentación del paisaje","heading":"2.5 Ejercicio 3","text":"Ahora probemos los alcances de la función estimando el índice MESH sobre un grid.Grid de 40 km2Estimar MESH usando un loop sencillo tipo ()Lo podemos visualizar con ggplot2","code":"\nGrid_test <- make_grid(x = paisaje, hexagonal = FALSE,\n                  cell_area = unit_convert(40, \"km2\", \"m2\"),\n                  clip = TRUE)\nplot(Grid_test)\n#Variable dummy\nGrid_test$MESH <- 0\n\nfor(i in 1:nrow(Grid_test)){\n  cat(paste0(i, \" de \", nrow(Grid_test), \"\\r\"))\n  grid.i <- Grid_test[i,]\n  nodes.i <- suppressWarnings(st_intersection(habitat_nodes, grid.i))\n  \n  if(nrow(nodes.i) > 0){\n    area_paisaje.i <- st_area(grid.i)\n    area_paisaje.i <- unit_convert(area_paisaje.i, \"m2\", \"ha\")\n    Fragmentacion.i <- MK_Fragmentation(nodes = nodes.i, \n                                      edge_distance = 500,\n                                      min_node_area = 100,\n                                      landscape_area = ,\n                                      area_unit = \"ha\",\n                                      perimeter_unit = \"km\",\n                                      plot = FALSE)\n    mesh <- as.data.frame(Fragmentacion.i[[1]])\n    mesh <- mesh[13,2]\n    mesh_porcentage <-  (area_paisaje.i - mesh)*100/area_paisaje.i \n    Grid_test$MESH[i] <- mesh_porcentage\n  } else {\n    Grid_test$MESH[i] <- 100\n  }\n}\nggplot() +  \n  geom_sf(data = paisaje, aes(color = \"Study area\"), fill = NA, color = \"black\") +\n  geom_sf(data = Grid_test, aes(fill = MESH), color = \"black\", size = 0.1) +\n  scale_fill_distiller(\n    palette = \"RdYlGn\",\n    direction = -1, \n    name = \"% Fragmentación\"\n  ) +\n  theme_minimal() +\n  labs(\n    title = \"GRID fragmentación (MESH)\",\n    fill = \"% Fragmentación\"\n  ) +\n  theme(\n    legend.position = \"right\",\n    plot.title = element_text(hjust = 0.5)\n  )"},{"path":"índices-de-centralidad.html","id":"índices-de-centralidad","chapter":"3 Índices de centralidad","heading":"3 Índices de centralidad","text":"","code":""},{"path":"índices-de-centralidad.html","id":"insumos-y-paquetes","chapter":"3 Índices de centralidad","heading":"3.1 Insumos y paquetes","text":"Seguimos trabajando con los mismos shapefiles de la sección anterior: habitat_nodes y paisaje.En caso de necesitar abrir otro vector (e.g., .shp, .gpkg) necesitan usar la fución read_sf() del paquete sf, la función shapefile() del paquete raster, o la funcion vect() del paquete terra.Para abrirlo solo necesitan colocar la dirección de su archivo, el nombre y la extensión, ejemplo:vegetation_patches <- sf::read_sf(\"D:/Datos/vegetation_patches.shp\")vegetation_patches <- sf::read_sf(\"D:/Datos/vegetation_patches.shp\")vegetation_patches <- raster::shapefile(\"D:/Datos/vegetation_patches.shp\")vegetation_patches <- raster::shapefile(\"D:/Datos/vegetation_patches.shp\")vegetation_patches <- terra::vect(\"D:/Datos/vegetation_patches.shp\")vegetation_patches <- terra::vect(\"D:/Datos/vegetation_patches.shp\")","code":"\nlibrary(ggplot2)\nlibrary(sf)\nlibrary(Makurhini)\nlibrary(RColorBrewer)#> Cargando paquete requerido: igraph\n#> \n#> Adjuntando el paquete: 'igraph'\n#> The following objects are masked from 'package:stats':\n#> \n#>     decompose, spectrum\n#> The following object is masked from 'package:base':\n#> \n#>     union\n#> Cargando paquete requerido: cppRouting\n#> Linking to GEOS 3.13.0, GDAL 3.10.1, PROJ 9.5.1;\n#> sf_use_s2() is TRUE\n#> [1] 404\nggplot() +  \n  geom_sf(data = paisaje, aes(color = \"Study area\"), fill = NA, color = \"black\") +\n  geom_sf(data = habitat_nodes, aes(color = \"Parches\"), fill = \"forestgreen\", linewidth = 0.5) +\n  scale_color_manual(name = \"\", values = \"black\")+\n  theme_minimal() +\n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_blank())"},{"path":"índices-de-centralidad.html","id":"mk_rmcentrality","chapter":"3 Índices de centralidad","heading":"3.2 MK_RMCentrality()","text":"La función MK_RMCentrality() calcula medidas radiales (es decir, grado, fuerza, centralidad de vectores propios y centralidad de proximidad) y mediales (es decir, centralidad de interrelación, pertenencia nodos y modularidad) de la centralidad de nodos para identificar, por ejemplo, stepping stones.Las medidas o índices que estima son los siguientes:","code":""},{"path":"índices-de-centralidad.html","id":"centralidad-de-grado-degree","chapter":"3 Índices de centralidad","heading":"3.2.1 1. Centralidad de Grado (degree)","text":"Cuántas conexiones directas tiene un nodo.Es como contar cuántos parches de hábitat o áreas protegidas están conectados con cada parche.Más conexiones = mayor grado = más centralidad.","code":""},{"path":"índices-de-centralidad.html","id":"fuerza-strength-para-redes-ponderadas","chapter":"3 Índices de centralidad","heading":"3.2.2 2. Fuerza (strength) (para redes ponderadas)","text":"Como el grado, pero suma los pesos (o probabilidades) de los enlaces.En lugar de solo contar conexiones, se suman qué tan fuertes o probables son (por ejemplo, probabilidad de dispersión).Un nodo con pocas pero fuertes conexiones puede ser más central que uno con muchas pero débiles.","code":""},{"path":"índices-de-centralidad.html","id":"centralidad-de-vector-propio-eigen","chapter":"3 Índices de centralidad","heading":"3.2.3 3. Centralidad de Vector Propio (eigen)","text":"Mide cuán conectado está un nodo con otros nodos importantes para la conectividad.Un nodo es importante si está conectado otros nodos que también lo son.Útil para detectar “nodos influyentes” en la red.","code":""},{"path":"índices-de-centralidad.html","id":"centralidad-de-cercanía-close","chapter":"3 Índices de centralidad","heading":"3.2.4 4. Centralidad de Cercanía (close)","text":"Qué tan cerca está un nodo de todos los demás.Se calcula como el inverso de la suma de distancias todos los demás nodos.Los nodos con alta cercanía pueden difundir o recibir flujo rápidamente.","code":""},{"path":"índices-de-centralidad.html","id":"medidas-mediales-quién-está-en-medio-o-conecta-otros-nodos","chapter":"3 Índices de centralidad","heading":"3.2.5 Medidas Mediales (¿Quién está en medio o conecta otros nodos?)","text":"","code":""},{"path":"índices-de-centralidad.html","id":"centralidad-de-intermediación-bwc","chapter":"3 Índices de centralidad","heading":"3.2.5.1 5. Centralidad de Intermediación (BWC)","text":"Cuántas veces un nodo se encuentra en las rutas más cortas entre otros nodos.Nodos con alta intermediación actúan como puentes (stepping stones) o cuellos de botella.Muy importantes para la conectividad — si se eliminan, pueden fragmentar la red.","code":""},{"path":"índices-de-centralidad.html","id":"detección-de-comunidades-quién-pertenece-al-mismo-grupo","chapter":"3 Índices de centralidad","heading":"3.2.6 Detección de Comunidades (¿Quién pertenece al mismo grupo?)","text":"","code":""},{"path":"índices-de-centralidad.html","id":"caminatas-aleatorias-cortas-memb.rw","chapter":"3 Índices de centralidad","heading":"3.2.6.1 6. Caminatas Aleatorias Cortas (memb.rw)","text":"Agrupa nodos según la probabilidad de que una caminata aleatoria permanezca dentro del grupo.Simula un animal moviéndose aleatoriamente por la red.Detecta grupos fuertemente conectados.","code":""},{"path":"índices-de-centralidad.html","id":"algoritmo-de-louvain-memb.louvain","chapter":"3 Índices de centralidad","heading":"3.2.6.2 7. Algoritmo de Louvain (memb.louvain)","text":"Divide la red en comunidades para maximizar la modularidad (qué tan separados están los grupos).Encuentra grupos donde los nodos están más conectados entre sí que con el resto.Es rápido y muy usado en redes ecológicas grandes.","code":""},{"path":"índices-de-centralidad.html","id":"la-función-no-correr","chapter":"3 Índices de centralidad","heading":"3.2.7 La función (no correr)","text":"","code":"\nMK_RMCentrality(\n  nodes,\n  distance = list(type = \"centroid\"),\n  distance_thresholds = NULL,\n  binary = TRUE,\n  probability = NULL,\n  rasterparallel = FALSE,\n  write = NULL,\n  intern = TRUE\n)"},{"path":"índices-de-centralidad.html","id":"descripción-de-los-argumentos-de-la-función","chapter":"3 Índices de centralidad","heading":"3.2.8 Descripción de los argumentos de la función","text":"","code":""},{"path":"índices-de-centralidad.html","id":"ejemplo-1","chapter":"3 Índices de centralidad","heading":"3.3 Ejemplo 1","text":"Exploremos otra forma de hacer el plot usando intervalosStrength:BWC:Membresía por random walk:Membresía por Louvain:","code":"\nlibrary(Makurhini)\nlibrary(sf)\ndata(\"habitat_nodes\", package = \"Makurhini\")\nnrow(habitat_nodes) # Number of patches\n#> [1] 404\n#Two distance threshold,\ncentrality_test <- MK_RMCentrality(nodes = habitat_nodes,\n                                distance = list(type = \"centroid\"),\n                                 distance_thresholds = 10000,\n                                 probability = 0.5,\n                                 write = NULL)\n#> Done!\ncentrality_test\n#> Simple feature collection with 404 features and 8 fields\n#> Geometry type: POLYGON\n#> Dimension:     XY\n#> Bounding box:  xmin: -108954 ymin: 2025032 xmax: 202330.2 ymax: 2198936\n#> Projected CRS: NAD_1927_Albers\n#> First 10 features:\n#>    Id strength        eigen      close  BWC cluster memb.rw\n#> 1   1 30228524 0.0010435836 0.03840356    0       1       6\n#> 2   2 21600031 0.0006195356 0.03995935    1       1       6\n#> 3   3 29320545 0.0009026418 0.03831019    0       1       6\n#> 4   4 16499522 0.0005867564 0.04187906   23       1       6\n#> 5   5 26068911 0.0011987437 0.04240465    0       1       6\n#> 6   6 12737692 0.0005630043 0.04627714   17       1       6\n#> 7   7 12497243 0.0005499038 0.04634291   15       1       6\n#> 8   8 13198398 0.0005859873 0.04607765    0       1       6\n#> 9   9 22276433 0.0010276194 0.04296412  567       1       6\n#> 10 10 12804425 0.0004306005 0.04405417 1063       1       6\n#>    memb.louvain                       geometry\n#> 1             1 POLYGON ((54911.05 2035815,...\n#> 2             1 POLYGON ((44591.28 2042209,...\n#> 3             1 POLYGON ((46491.11 2042467,...\n#> 4             1 POLYGON ((54944.49 2048163,...\n#> 5             2 POLYGON ((80094.28 2064140,...\n#> 6             2 POLYGON ((69205.24 2066394,...\n#> 7             2 POLYGON ((68554.2 2066632, ...\n#> 8             2 POLYGON ((69995.53 2066880,...\n#> 9             2 POLYGON ((79368.68 2067324,...\n#> 10            1 POLYGON ((23378.32 2067554,...install.packages(\"ClassInt\"), dependencies = TRUE)\ninstall.packages(\"dplyr\"), dependencies = TRUE)\nlibrary(classInt)\nlibrary(dplyr)\n#> \n#> Adjuntando el paquete: 'dplyr'\n#> The following objects are masked from 'package:igraph':\n#> \n#>     as_data_frame, groups, union\n#> The following objects are masked from 'package:stats':\n#> \n#>     filter, lag\n#> The following objects are masked from 'package:base':\n#> \n#>     intersect, setdiff, setequal, union\n\n# Calcular los intervalos de Jenks para strength\nbreaks <- classInt::classIntervals(centrality_test$strength, n = 9, style = \"quantile\")\n\n# Crear una nueva variable categórica con los intervalos\ncentrality_test <- centrality_test %>%\n  mutate(strength_q = cut(strength,\n                              breaks = breaks$brks,\n                              include.lowest = TRUE,\n                              dig.lab = 5))  \n\n# Graficar en ggplot2 usando las clases Jenks\nggplot() +  \n  geom_sf(data = paisaje, fill = NA, color = \"black\") +\n  geom_sf(data = centrality_test, aes(fill = strength_q), color = \"black\", size = 0.1) +\n  scale_fill_brewer(palette = \"RdYlGn\", direction = 1, name = \"Fuerza (Jenks)\") +\n  theme_minimal() +\n  labs(\n    title = \"Centralidad a nivel de parche (Strength)\",\n    fill = \"Strength\\n(Jenks)\"\n  ) +\n  theme(\n    legend.position = \"right\",\n    plot.title = element_text(hjust = 0.5)\n  )\nbreaks <- classInt::classIntervals(centrality_test$BWC, n = 9, style = \"jenks\")\ncentrality_test <- centrality_test %>%\n  mutate(BWC_jenks = cut(BWC,\n                              breaks = breaks$brks,\n                              include.lowest = TRUE,\n                              dig.lab = 5))\nggplot() +  \n  geom_sf(data = paisaje, fill = NA, color = \"black\") +\n  geom_sf(data = centrality_test, aes(fill = BWC_jenks), color = \"black\", size = 0.1) +\n  scale_fill_brewer(palette = \"RdYlGn\", direction = 1, name = \"BWC (Jenks)\") +\n  theme_minimal() +\n  labs(\n    title = \"Centralidad a nivel de parche (BWC)\",\n    fill = \"BWC\\n(Jenks)\"\n  ) +\n  theme(\n    legend.position = \"right\",\n    plot.title = element_text(hjust = 0.5)\n  )\nggplot() +  \n  geom_sf(data = paisaje, fill = NA, color = \"black\") +\n  geom_sf(data = centrality_test, aes(fill = as.factor(memb.rw)), color = \"black\", size = 0.1) +\n  scale_fill_brewer(\n    palette = \"Set3\",\n    name = \"Membership RW\"\n  ) +\n  theme_minimal() +\n  labs(\n    title = \"Agrupación de parches (Random walks)\",\n    fill = \"Membership RW\"\n  ) +\n  theme(\n    legend.position = \"right\",\n    plot.title = element_text(hjust = 0.5)\n  )\nggplot() +  \n  geom_sf(data = paisaje, fill = NA, color = \"black\") +\n  geom_sf(data = centrality_test, aes(fill = as.factor(memb.louvain)), color = \"black\", size = 0.1) +\n  scale_fill_brewer(\n    palette = \"Set3\",\n    name = \"Membership LV\"\n  ) +\n  theme_minimal() +\n  labs(\n    title = \"Agrupación de parches (Louvain)\",\n    fill = \"Membership LV\"\n  ) +\n  theme(\n    legend.position = \"right\",\n    plot.title = element_text(hjust = 0.5)\n  )"},{"path":"índices-de-centralidad.html","id":"ejemplo-2","chapter":"3 Índices de centralidad","heading":"3.4 Ejemplo 2","text":"Usando más de un umbral de distancia10 km:100 km:","code":"\ncentrality_test <- MK_RMCentrality(nodes = habitat_nodes,\n                                distance = list(type = \"centroid\"),\n                                 distance_thresholds = c(10000, 100000),\n                                 probability = 0.5,\n                                 write = NULL)\n#> Done!\ncentrality_test\n#> $d10000\n#> Simple feature collection with 404 features and 8 fields\n#> Geometry type: POLYGON\n#> Dimension:     XY\n#> Bounding box:  xmin: -108954 ymin: 2025032 xmax: 202330.2 ymax: 2198936\n#> Projected CRS: NAD_1927_Albers\n#> First 10 features:\n#>    Id strength        eigen      close  BWC cluster memb.rw\n#> 1   1 30228524 0.0010435836 0.03840356    0       1       6\n#> 2   2 21600031 0.0006195356 0.03995935    1       1       6\n#> 3   3 29320545 0.0009026418 0.03831019    0       1       6\n#> 4   4 16499522 0.0005867564 0.04187906   23       1       6\n#> 5   5 26068911 0.0011987437 0.04240465    0       1       6\n#> 6   6 12737692 0.0005630043 0.04627714   17       1       6\n#> 7   7 12497243 0.0005499038 0.04634291   15       1       6\n#> 8   8 13198398 0.0005859873 0.04607765    0       1       6\n#> 9   9 22276433 0.0010276194 0.04296412  567       1       6\n#> 10 10 12804425 0.0004306005 0.04405417 1063       1       6\n#>    memb.louvain                       geometry\n#> 1             1 POLYGON ((54911.05 2035815,...\n#> 2             2 POLYGON ((44591.28 2042209,...\n#> 3             2 POLYGON ((46491.11 2042467,...\n#> 4             2 POLYGON ((54944.49 2048163,...\n#> 5             1 POLYGON ((80094.28 2064140,...\n#> 6             1 POLYGON ((69205.24 2066394,...\n#> 7             1 POLYGON ((68554.2 2066632, ...\n#> 8             1 POLYGON ((69995.53 2066880,...\n#> 9             1 POLYGON ((79368.68 2067324,...\n#> 10            2 POLYGON ((23378.32 2067554,...\n#> \n#> $`d1e+05`\n#> Simple feature collection with 404 features and 8 fields\n#> Geometry type: POLYGON\n#> Dimension:     XY\n#> Bounding box:  xmin: -108954 ymin: 2025032 xmax: 202330.2 ymax: 2198936\n#> Projected CRS: NAD_1927_Albers\n#> First 10 features:\n#>    Id strength     eigen     close BWC cluster memb.rw\n#> 1   1 958.4815 0.6679253 0.4207380   0       1       1\n#> 2   2 925.0415 0.6471542 0.4356561   0       1       1\n#> 3   3 960.2533 0.6700437 0.4197704   0       1       1\n#> 4   4 896.6891 0.6266304 0.4494531   0       1       1\n#> 5   5 871.2094 0.6057986 0.4632174   0       1       1\n#> 6   6 836.4790 0.5842254 0.4818295   0       1       1\n#> 7   7 836.5028 0.5843345 0.4818097   0       1       1\n#> 8   8 837.6158 0.5848721 0.4811889   0       1       1\n#> 9   9 858.0974 0.5971238 0.4701554   0       1       1\n#> 10 10 874.7611 0.6125436 0.4606972   0       1       1\n#>    memb.louvain                       geometry\n#> 1             1 POLYGON ((54911.05 2035815,...\n#> 2             1 POLYGON ((44591.28 2042209,...\n#> 3             1 POLYGON ((46491.11 2042467,...\n#> 4             1 POLYGON ((54944.49 2048163,...\n#> 5             1 POLYGON ((80094.28 2064140,...\n#> 6             1 POLYGON ((69205.24 2066394,...\n#> 7             1 POLYGON ((68554.2 2066632, ...\n#> 8             1 POLYGON ((69995.53 2066880,...\n#> 9             1 POLYGON ((79368.68 2067324,...\n#> 10            1 POLYGON ((23378.32 2067554,...\nplot(centrality_test$d10000[\"BWC\"], breaks = \"jenks\")\nplot(centrality_test$`d1e+05`[\"BWC\"], breaks = \"quantile\")"}]
